{"version":3,"sources":["contexts/MyContext.js","contexts/Apilinks.js","components/Sticky.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["MyContext","createContext","Axios","axios","create","baseURL","WEB_URL","MyContextProvider","state","isAuth","theUserid","theUsername","theUsertype","theUsergoogle","theUseremail","isLoggedIn","a","RegisterUser","user","phone","post","user_name","name","type","user_email","email","password","subscribe","registerqqq","data","addpropertyall","selectedideal","datevalue","propertyDetails","propertytype","City","Society","Locality","Address","Bedrooms","Balconies","FloorNo","FurnishedStatus","Bathrooms","Carpet","Super","TransactionType","Month","Year","Age","ExpectedPrice","TokenAmount","Carpetsq","Supersq","totalfloor","opensides","roadwidth","anyconstruction","boundarywall","gatedcolony","landzone","washrooms","personalwashroom","pantry","leasedout","assuredreturns","floorscommoffice","cornershop","ismainroadfacing","widthofentrance","widthqqq","plot","plotq","plotlength","plotbreadth","cornerplot","datevalues","availablefrom","monthlyrent","securityamount","maintenancecharges","per","willing","lock","rentout","addpropertyallqqq","Rentsall","pageNumber","get","Rentsallqqq","allimgsss","ids","allimgsssqqq","this","contextValue","rootState","Provider","value","props","children","Component","WEB_URL_UPLOAD","CAPTCHA_SITE_KEY","Sticky","useState","darkMode","setDarkMode","ActiveMode","document","body","classList","add","remove","localStorage","setItem","useEffect","getItem","className","onClick","Home","lazy","NotFound","Login","Register","PostProperty","PostPropertyimg","Rent","Dashboard","basename","fallback","exact","path","component","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dad912d7.chunk.js","sourcesContent":["\r\nimport React, { createContext,Component } from \"react\";\r\nimport axios from 'axios';\r\nimport { WEB_URL } from './Apilinks';\r\nexport const MyContext = createContext();\r\n\r\n// Define the base URL\r\nconst Axios = axios.create({\r\n    baseURL: WEB_URL,\r\n});\r\n\r\nclass MyContextProvider extends Component{\r\n  \r\n\r\n    state = {\r\n        isAuth:false,\r\n        theUserid:null,\r\n        theUsername:null,\r\n        theUsertype:null,\r\n        theUsergoogle:null,\r\n        theUseremail:null\r\n    }\r\n    componentDidMount(){\r\n        this.isLoggedIn();\r\n    }\r\n    \r\n        isLoggedIn = async () => {\r\n            // let bubworldTokenid = JSON.parse(localStorage.getItem('bookworldTokenid'));\r\n            // let bubworldTokenname = JSON.parse(localStorage.getItem('bookworldTokenname'));\r\n            // let bubworldTokentype = JSON.parse(localStorage.getItem('bookworldTokentype'));\r\n            // let bubworldTokengoogle = JSON.parse(localStorage.getItem('bookworldTokengoogle'));\r\n            // let bubworldTokenemail = JSON.parse(localStorage.getItem('bookworldTokenemail'));\r\n            // if (localStorage.getItem('bookworldTokenid')) {\r\n            //     this.setState({\r\n            //         ...this.state,\r\n            //         isAuth:true,\r\n            //         theUserid:bubworldTokenid,\r\n            //         theUsername:bubworldTokenname,\r\n            //         theUsertype:bubworldTokentype,\r\n            //         theUsergoogle:bubworldTokengoogle,\r\n            //         theUseremail:bubworldTokenemail,\r\n            //     });\r\n            //     //console.log(this.state.isAuth);\r\n            // }\r\n        }\r\n        RegisterUser = async (user,phone) => {\r\n            const registerqqq = await Axios.post('Register',{\r\n                user_name:user.name,\r\n                type:user.type,\r\n                user_email:user.email,\r\n                password:user.password,\r\n                subscribe:user.subscribe, \r\n                phone:phone, \r\n               //recaptcha_response:recaptcha_response,\r\n            });\r\n            return registerqqq.data;\r\n        }\r\n        addpropertyall = async (user,selectedideal,datevalue) => {\r\n            const addpropertyallqqq = await Axios.post('addpropertyallsss',{\r\n                propertyDetails: user.propertyDetails ,\r\n                propertytype: user.propertytype ,\r\n                City: user.City ,\r\n                Society: user.Society ,\r\n                Locality: user.Locality ,\r\n                Address: user.Address ,\r\n                Bedrooms: user.Bedrooms ,\r\n                Balconies: user.Balconies ,\r\n                FloorNo: user.FloorNo ,\r\n                FurnishedStatus: user.FurnishedStatus ,\r\n                Bathrooms: user.Bathrooms ,\r\n                Carpet: user.Carpet ,\r\n                Super: user.Super ,\r\n                TransactionType: user.TransactionType ,\r\n                Month:  user.Month ,\r\n                Year: user.Year ,\r\n                Age:  user.Age ,\r\n                ExpectedPrice:  user.ExpectedPrice ,\r\n                TokenAmount:  user.TokenAmount ,\r\n                Carpetsq: user.Carpetsq ,\r\n\t\t        Supersq: user.Supersq ,\r\n\t\t        selectedideal: selectedideal,\r\n                totalfloor:  user.totalfloor ,\r\n                opensides:  user.opensides ,\r\n                roadwidth:  user.roadwidth ,\r\n                anyconstruction:  user.anyconstruction ,\r\n                boundarywall:  user.boundarywall ,\r\n                gatedcolony:  user.gatedcolony ,\r\n                landzone:  user.landzone ,\r\n                washrooms:  user.washrooms ,\r\n                personalwashroom:  user.personalwashroom ,\r\n                pantry:  user.pantry ,\r\n                leasedout:  user.leasedout ,\r\n                assuredreturns:  user.assuredreturns ,\r\n                floorscommoffice:  user.floorscommoffice ,\r\n                cornershop:   user.cornershop ,\r\n                ismainroadfacing:  user.ismainroadfacing ,\r\n                widthofentrance:  user.widthofentrance ,\r\n                widthqqq:  user.widthqqq ,\r\n                plot:  user.plot ,\r\n                plotq:  user.plotq ,\r\n                plotlength:  user.plotlength ,\r\n                plotbreadth:  user.plotbreadth ,\r\n                cornerplot:  user.cornerplot ,\r\n                datevalues: datevalue ,\r\n                availablefrom:  user.availablefrom ,\r\n                monthlyrent:  user.monthlyrent ,\r\n                securityamount:  user.securityamount ,\r\n                maintenancecharges:  user.maintenancecharges ,\r\n                per:  user.per ,\r\n                willing:  user.willing ,\r\n                lock:  user.lock ,\r\n                rentout:  user.rentout ,\r\n            });\r\n            return addpropertyallqqq.data;\r\n        }\r\n        Rentsall = async (pageNumber) => {\r\n            const Rentsallqqq = await Axios.get(`Rentsallsss/${pageNumber}`);\r\n            return Rentsallqqq.data;\r\n        }\r\n        allimgsss = async (ids) => {\r\n            const allimgsssqqq = await Axios.post('allimgssslist',{\r\n                ids:ids,\r\n            });\r\n            return allimgsssqqq.data;\r\n        }\r\n        \r\n     \r\n\r\n    render(){\r\n        const contextValue = {\r\n            \r\n            rootState:this.state,\r\n            isLoggedIn:this.isLoggedIn,\r\n            RegisterUser:this.RegisterUser,\r\n            addpropertyall:this.addpropertyall,\r\n            Rentsall:this.Rentsall,\r\n            allimgsss:this.allimgsss,\r\n            \r\n           \r\n        }\r\n        return(\r\n            <MyContext.Provider value={contextValue}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyContextProvider;","\r\nexport const WEB_URL_UPLOAD = \"http://localhost/bookbubworld/uploads/\";\r\nexport const WEB_URL = \"http://192.168.0.128:8080/\";\r\n// export const GOOGLE_CLIENTID = \"428908088552-ol29n9ncigoip2duing7na2e5d1s0r7l.apps.googleusercontent.com\";\r\n// export const FACEBOOK_APPID = \"859363811311050\";\r\n// export const API_KEY_STRIPE = \"pk_live_yn6RjQtCI6a8ITcRqjeSdLKv00FSgvPKl8\";\r\n export const CAPTCHA_SITE_KEY = \"6Lci8VwaAAAAAK8Cv5NrosBu_gfGsKKCmNTmXLIt\";\r\n// export const WEB_URL_UPLOAD = \"https://bookois.com/uploads/\";\r\n// export const WEB_URL = \"https://bookois.com/\";\r\n\r\n\r\n\r\n\r\n\r\n","import React,{useState,useEffect} from 'react';\r\nimport { FcNightLandscape,FcLandscape } from \"react-icons/fc\";\r\nconst Sticky = () => {\r\n       const [darkMode, setDarkMode] = useState(false);\r\n       const ActiveMode = async () => {\r\n              setDarkMode(!darkMode);\r\n              if(darkMode === true){ \r\n                     document.body.classList.add('light__mode');\r\n                     document.body.classList.remove('dark__mode');\r\n                     await localStorage.setItem('Theme','light__mode'); \r\n              }\r\n              if(darkMode === false){ \r\n                     document.body.classList.add('dark__mode');\r\n                     document.body.classList.remove('light__mode');\r\n                     await localStorage.setItem('Theme','dark__mode'); \r\n              }\r\n       };\r\n       useEffect(() => {\r\n              if (localStorage.getItem('Theme') === 'light__mode') {\r\n                     document.body.classList.add('light__mode');\r\n              } else if (localStorage.getItem('Theme') === 'dark__mode') {\r\n                     document.body.classList.add('dark__mode');\r\n                     setDarkMode(!darkMode);\r\n              }\r\n       }, []);\r\n\r\n       return ( <>\r\n              <div className=\"so__groups__sticky \" >\r\n                     <div className=\"switch-checkbox\">\r\n                            {localStorage.getItem('Theme') === 'dark__mode' ?\r\n                                  <FcNightLandscape onClick={ActiveMode} /> \r\n                            :\r\n                                   <FcLandscape onClick={ActiveMode}/> \r\n                            }\r\n                     </div>\r\n\r\n              </div>\r\n\r\n       </> )\r\n}\r\n\r\nexport default Sticky\r\n","import React, { Suspense, lazy } from 'react';\r\nimport {BrowserRouter as Router,Redirect,Switch,Route} from \"react-router-dom\";\r\nimport { ToastContainer} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport '../App.scss';\r\nimport Sticky from './Sticky';\r\nconst Home = lazy(() => import('./Home'));\r\nconst NotFound = lazy(() => import(\"./NotFound\"));\r\nconst Login = lazy(() => import(\"./LoginPage/Login\"));\r\nconst Register = lazy(() => import(\"./LoginPage/Register\"));\r\nconst PostProperty = lazy(() => import(\"./property/PostProperty\"));\r\nconst PostPropertyimg = lazy(() => import(\"./property/PostPropertyimg\"));\r\nconst Rent = lazy(() => import(\"./property/Rent\"));\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n  return (<>   <ToastContainer />\r\n    <Router basename=\"/\">\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Switch>\r\n         <Route exact path=\"/\" component={Home}/>\r\n         <Route exact path=\"/Login\" component={Login}/>\r\n         <Route exact path=\"/Register\" component={Register}/>\r\n         <Route exact path=\"/PostProperty\" component={PostProperty}/>\r\n         <Route exact path=\"/PostPropertyimg/:AddPreview\" component={PostPropertyimg}/>\r\n         <Route exact path=\"/Rent\" component={Rent}/>\r\n         <Route exact path=\"/404\" component={NotFound} />\r\n          <Redirect to=\"/404\" />\r\n\r\n       \r\n        </Switch>\r\n      </Suspense>\r\n    </Router>\r\n    <Sticky />\r\n    </>\r\n  );\r\n}\r\nexport default Dashboard;\r\n","import React from 'react';\nimport MyContextProvider from './contexts/MyContext';\nimport Dashboard from './components/Dashboard';\nfunction App() { return (<MyContextProvider><Dashboard/></MyContextProvider>);}export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}